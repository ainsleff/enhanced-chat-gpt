apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "librechat.fullname" . }}
  labels:
    {{- include "librechat.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  serviceName: {{ template "librechat.fullname" . }}
  selector:
    matchLabels:
      {{- include "librechat.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "librechat.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ (print (include (printf "%s/configmap-config.yaml" $.Template.BasePath) .) (include (printf "%s/configmap-dotenv.yaml" $.Template.BasePath) .) (include (printf "%s/configmap-env.yaml" $.Template.BasePath) .)) | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default (include "librechat.fullname" .) }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
      {{- if .Values.config.file.enabled }}
        - name: librechat-config
          configMap:
            name: {{ .Values.config.file.configMapKeyRef.name }}
      {{- end }}
      {{- if .Values.config.dotEnv.enabled }}
        - name: librechat-dotenv
          configMap:
            name: {{ .Values.config.dotEnv.configMapKeyRef.name }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "librechat.fullname" . }}
            - configMapRef:
                name: {{ include "librechat.fullname" . }}-env
          ports:
            - name: http
              containerPort: 3080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          {{- if .Values.config.file.enabled }}
            - mountPath: /app/librechat.yaml
              name: librechat-config
              subPath: {{ .Values.config.file.configMapKeyRef.key }}
              readOnly: true
          {{- end }}
          {{- if .Values.config.dotEnv.enabled }}
            - mountPath: /app/.env
              name: librechat-dotenv
              subPath: {{ .Values.config.dotEnv.configMapKeyRef.key }}
              readOnly: true
          {{- end }}
          {{- if .Values.persistence.enabled }}
            - mountPath: /app/client/public/images
              name: datapvc
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: datapvc
        labels:
          {{- include "librechat.labels" . | nindent 10 }}
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}

